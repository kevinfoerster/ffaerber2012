#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

#!/usr/bin/env ruby

require 'compass'

Compass.add_project_configuration('config.rb')

### Compilation rules

compile '/style/*/' do
  filter :sass, Compass.sass_engine_options
end

compile '*/media/*/', :rep => :thumbnail do
    filter :resizeAndCrop, :width => 275, :height => 206
  # filter :sass, Compass.sass_engine_options
end

compile '/media/*/', :rep => :thumbnail do
  # filter :resizeAndCrop, :width => 550
end

compile '/stylesheets/partials/*/' do
  # don’t compile partials
end

compile '/projekte/*', :rep => :image do
  unless item.binary?
    filter :getNestedMedia, :source => item.identifier
  end
end

compile '*' do
  unless item.binary?
    filter :erb
    layout 'default'
  end
end


compile '/' do
  filter :kramdown
  layout 'default'
end



### Routing rules

route '/style/_*/' do
  # don't output partials, so return nil
  nil
end

route '/projekte/*', :rep => :image do
  # don't output partials, so return nil
  nil
end

route '*', :rep => :thumbnail do
  if item.binary?
    item.identifier.chop+"_thumbnail."+ item[:extension]    
  end
end

route '/style/*/' do
  # don't generate a directory like we do for HTML files
  item.identifier.chop + '.css'
end

route '*' do
  unless item.binary?
    item.identifier + 'index.html'
  end
end

### Layout rules

layout '*', :erb




